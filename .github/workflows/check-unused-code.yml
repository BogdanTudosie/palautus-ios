name: Check Unused Code

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  periphery:
    name: 🔍 Unused Code Check
    runs-on: macos-latest
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🛠️ Select Xcode
        run: |
          echo "Using Xcode 16.2..."
          sudo xcode-select -s /Applications/Xcode_16.2.app
          xcodebuild -version

      - name: 📱 Setup iOS Simulator
        id: simulator
        run: |
          echo "Setting up iOS Simulator..."

          # Find available iOS 17.x simulator
          RUNTIME_ID=$(xcrun simctl list runtimes | grep "iOS 17" | head -n 1 | awk '{print $NF}')
          if [ -z "$RUNTIME_ID" ]; then
            echo "⚠️ iOS 17 runtime not found, downloading..."
            xcrun xcodebuild -downloadPlatform iOS
            RUNTIME_ID=$(xcrun simctl list runtimes | grep "iOS 17" | head -n 1 | awk '{print $NF}')
          fi

          echo "📱 Using runtime: $RUNTIME_ID"

          # Create and boot simulator
          DEVICE_ID=$(xcrun simctl create "iPhone 16" \
            com.apple.CoreSimulator.SimDeviceType.iPhone-16 \
            $RUNTIME_ID)

          echo "🚀 Booting simulator: $DEVICE_ID"
          xcrun simctl boot "$DEVICE_ID"

          # Export for other steps
          echo "DEVICE_ID=$DEVICE_ID" >> $GITHUB_ENV

      - name: 💾 Cache Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/Library/Caches/Homebrew
            ~/Library/Caches/periphery
          key: ${{ runner.os }}-deps-${{ hashFiles('**/Brewfile') }}

      - name: 🔧 Install periphery
        run: |
          if ! command -v periphery &> /dev/null; then
            brew install periphery
          fi

      - name: 🏗️ Build for indexing
        run: |
          # Create required directories
          mkdir -p periphery-reports
          mkdir -p ~/Library/Caches/com.github.peripheryapp

          # Build with explicit DerivedData path
          xcodebuild clean build \
          -project palautus.xcodeproj \
          -scheme palautus \
          -destination "platform=iOS Simulator,id=$DEVICE_ID" \
          -sdk iphonesimulator \
          -derivedDataPath ~/Library/Developer/Xcode/DerivedData \
          CODE_SIGNING_REQUIRED=NO \
          ONLY_ACTIVE_ARCH=YES \
          | xcpretty --color --simple

      - name: 🔎 Run periphery
        run: |
          periphery scan \
            --project palautus.xcodeproj \
            --schemes palautus \
            --format json \
            --index-store-path ~/Library/Developer/Xcode/DerivedData/palautus-*/Index/DataStore \
            --retain-objc-metadata \
            --skip-build \
            --quiet > periphery-reports/report.json || true # Continue even if unused code is found

      - name: 📤 Upload Reports
        uses: actions/upload-artifact@v4
        with:
          name: periphery-scan-results
          path: periphery-reports
          retention-days: 14
