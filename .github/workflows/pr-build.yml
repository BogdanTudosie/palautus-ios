name: iOS Pull Request
on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - '**.swift'
      - '**.xcodeproj/**'
      - '**.plist'
      - '.github/workflows/**'

jobs:
  build-and-test:
    name: Build and Test
    runs-on: macos-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - uses: actions/checkout@v4

      - name: Select Xcode
        run: sudo xcode-select -s /Applications/Xcode_16.2.app

      - name: Show Build Settings
        run: |
          echo "Project build settings:"
          xcodebuild -project palautus.xcodeproj -scheme palautus -showBuildSettings | grep -i "DEPLOYMENT_TARGET"
          echo "\nAvailable destinations:"
          xcodebuild -project palautus.xcodeproj -scheme palautus -showdestinations

      - name: Attempt Platform Download
        run: |
          echo "Attempting to download iOS 18.2 platform..."
          xcodebuild -downloadPlatform iOS || true
          
          echo "\nAvailable runtimes after download attempt:"
          xcrun simctl list runtimes

      - name: Create and Boot Simulator
        run: |
          SIMULATOR_NAME="iPhone 14"
          
          echo "Available runtimes:"
          xcrun simctl list runtimes
          
          # Get the runtime that matches our project requirements
          RUNTIME_ID=$(xcrun simctl list runtimes | grep "iOS 17" | head -1 | awk '{print $NF}')
          echo "Using runtime: ${RUNTIME_ID}"
          
          SIMULATOR_UDID=$(xcrun simctl create "${SIMULATOR_NAME}" "iPhone 14" "${RUNTIME_ID}")
          echo "Created simulator: ${SIMULATOR_UDID}"
          
          xcrun simctl boot "${SIMULATOR_UDID}"
          echo "SIMULATOR_UDID=${SIMULATOR_UDID}" >> $GITHUB_ENV

      - name: Build and Test
        run: |
          xcodebuild clean test \
            -project palautus.xcodeproj \
            -scheme palautus \
            -destination "platform=iOS Simulator,id=${SIMULATOR_UDID}" \
            -sdk iphonesimulator \
            -enableCodeCoverage YES \
            CODE_SIGNING_REQUIRED=NO \
            ONLY_ACTIVE_ARCH=YES \
            | xcpretty && exit ${PIPESTATUS[0]}

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            build/reports/
            fastlane/test_output/