name: iOS Pull Request
on:
  pull_request:
    branches: [develop, feature-branch, main]
    paths:
      - "**.swift"
      - "**.xcodeproj/**"
      - "**.plist"
      - ".github/workflows/**"

jobs:
  build-and-test:
    name: Build and Test
    runs-on: macos-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - uses: actions/checkout@v4

      - name: Select Xcode
        run: sudo xcode-select -s /Applications/Xcode_16.2.app

      - name: Setup Simulator
        id: simulator
        run: |
          # Download iOS platform with retry
          for i in {1..5}; do
            xcrun xcodebuild -downloadPlatform iOS && break
            echo "Attempt $i failed. Retrying..."
            sleep 10
          done

          # Find and setup simulator
          SIMULATOR_UDID=$(xcrun simctl list devices | awk '/iOS 18\./{flag=1;next}/^--/{flag=0}flag' | grep 'iPhone 16' | grep -v 'unavailable' | awk -F '[()]' '{print $2}' | head -n 1)
          echo "SIMULATOR_UDID=${SIMULATOR_UDID}" >> $GITHUB_OUTPUT
          
          xcrun simctl erase "$SIMULATOR_UDID"
          xcrun simctl boot "$SIMULATOR_UDID"
          
          # Wait for boot
          for i in {1..12}; do
            xcrun simctl list devices | grep "$SIMULATOR_UDID" | grep -q "Booted" && break
            sleep 5
          done

      - name: Cache Build Data
        uses: actions/cache@v3
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-xcode-${{ hashFiles('**/*.xcodeproj/project.pbxproj') }}
          restore-keys: ${{ runner.os }}-xcode-

      - name: Build and Test
        run: |
          xcodebuild test \
          -project palautus.xcodeproj \
          -scheme palautus \
          -destination "platform=iOS Simulator,id=${{ steps.simulator.outputs.SIMULATOR_UDID }}" \
          -sdk iphonesimulator \
          -enableCodeCoverage YES \
          -parallel-testing-enabled YES \
          -maximum-parallel-testing-workers 3 \
          -derivedDataPath ~/Library/Developer/Xcode/DerivedData \
          -configuration Debug \
          CODE_SIGNING_REQUIRED=NO \
          ONLY_ACTIVE_ARCH=YES \
          | xcpretty --color --simple && exit ${PIPESTATUS[0]}

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ~/Library/Developer/Xcode/DerivedData/*/Logs/Test/*.xcresult

  lint:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: norio-nomura/action-swiftlint@3.2.1
        with:
          args: --strict

  security:
    needs: build-and-test
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          format: sarif
          output: trivy-results.sarif
          severity: CRITICAL,HIGH
