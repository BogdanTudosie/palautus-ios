name: TestFlight Deployment
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        type: choice
        required: true
        default: 'staging'
        options:
          - staging
          - production

jobs:
  deploy:
    name: Deploy to TestFlight
    runs-on: macos-latest
    
    env:
      BUNDLE_ID: "your.bundle.identifier"
      XCODE_SCHEME: "palautus"
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Select Xcode
        run: sudo xcode-select -s /Applications/Xcode_16.2.app

      - name: Setup iOS platform
        run: |
          echo "Downloading iOS platform..."
          xcrun xcodebuild -downloadPlatform iOS
          
          echo "Available runtimes:"
          xcrun simctl list runtimes

      - name: Install Apple Certificate
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # Create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # Import certificate from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH

          # Create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # Import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

      - name: Install Provisioning Profile
        env:
          PROVISIONING_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE_BASE64 }}
        run: |
          # Create variables
          PP_PATH=$RUNNER_TEMP/profile.mobileprovision
          
          # Import profile from secrets
          echo -n "$PROVISIONING_PROFILE_BASE64" | base64 --decode -o $PP_PATH
          
          # Move profile to correct location
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Setup App Store Connect API
        env:
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
          ASC_PRIVATE_KEY: ${{ secrets.ASC_PRIVATE_KEY }}
        run: |
          # Store App Store Connect API key
          echo -n "$ASC_PRIVATE_KEY" > AuthKey.p8

      - name: Build App
        env:
          TEAM_ID: ${{ secrets.TEAM_ID }}
        run: |
          xcodebuild clean archive \
            -project palautus.xcodeproj \
            -scheme "$XCODE_SCHEME" \
            -configuration Release \
            -archivePath $RUNNER_TEMP/palautus.xcarchive \
            -allowProvisioningUpdates \
            DEVELOPMENT_TEAM="$TEAM_ID" \
            | xcpretty && exit ${PIPESTATUS[0]}

      - name: Create IPA
        run: |
          xcodebuild -exportArchive \
            -archivePath $RUNNER_TEMP/palautus.xcarchive \
            -exportPath $RUNNER_TEMP/build \
            -exportOptionsPlist exportOptions.plist \
            -allowProvisioningUpdates \
            | xcpretty && exit ${PIPESTATUS[0]}

      - name: Upload to TestFlight
        env:
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
        run: |
          xcrun altool --upload-app \
            -f $RUNNER_TEMP/build/palautus.ipa \
            --apiKey "$ASC_KEY_ID" \
            --apiIssuer "$ASC_ISSUER_ID" \
            --type ios